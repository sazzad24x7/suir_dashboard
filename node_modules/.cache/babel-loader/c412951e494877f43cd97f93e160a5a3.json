{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport createHistory from 'history/createBrowserHistory';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\nexport var history = createHistory();\nvar sagaMiddleware = createSagaMiddleware(); // const initialState = {}\n\nvar enhancers = [];\nvar middleware = [sagaMiddleware, thunk, logger, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nvar store = createStore(connectRouter(history)(rootReducer), // initialState,\ncomposedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/sayed/Desktop/React Library practices/sazzad_dashboard/src/redux/store/index.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","connectRouter","routerMiddleware","thunk","logger","createHistory","rootReducer","rootSaga","history","sagaMiddleware","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,OAAO,GAAGH,aAAa,EAA7B;AACP,IAAMI,cAAc,GAAGT,oBAAoB,EAA3C,C,CAEA;;AAEA,IAAMU,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CACjBF,cADiB,EAEjBN,KAFiB,EAGjBC,MAHiB,EAIjBF,gBAAgB,CAACM,OAAD,CAJC,CAAnB;;AAOA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,oCAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,IAAMI,iBAAiB,GAAGpB,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBa,UAAnB,CADwB,SAErBD,SAFqB,EAA1B;AAKA,IAAMU,KAAK,GAAGvB,WAAW,CACvBI,aAAa,CAACO,OAAD,CAAb,CAAuBF,WAAvB,CADuB,EAEvB;AACAa,iBAHuB,CAAzB;AAMEV,cAAc,CAACY,GAAf,CAAmBd,QAAnB;AAEF,eAAea,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nexport const history = createHistory()\nconst sagaMiddleware = createSagaMiddleware();\n\n// const initialState = {}\n\nconst enhancers = []\nconst middleware = [\n  sagaMiddleware,\n  thunk,\n  logger,\n  routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ \n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  // initialState,\n  composedEnhancers\n  )\n\n  sagaMiddleware.run(rootSaga);\n\nexport default store"]},"metadata":{},"sourceType":"module"}